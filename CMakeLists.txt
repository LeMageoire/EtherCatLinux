cmake_minimum_required(VERSION 3.10)
project(EtherCatLinux)

set(CMAKE_C_STANDARD 99)

find_package(Threads REQUIRED)

find_library(SOEM_LIB soem PATHS ./SOEM/build)
if(SOEM_LIB)
    message(STATUS "Found SOEM library: ${SOEM_LIB}")
    if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
        message(STATUS "Linux system detected")
        include_directories(/path/to/SOEM/soem/linux)
        include_directories(./SOEM/soem)
        include_directories(./SOEM/osal)
        include_directories(./SOEM/osal/linux)
        include_directories(./SOEM/oshw/linux)
        #include_directories(./SOEM/oshw/win32/wpcap/Include)
    elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
        include_directories(/path/to/SOEM/soem/windows)
    endif()
    add_executable(EtherCatLinux src/main.c)
    target_link_libraries(EtherCatLinux ${SOEM_LIB} Threads::Threads)
else()
    message(FATAL_ERROR "SOEM library not found. Building SOEM from source...")
    #add_subdirectory(SOEM SOEM_build)
    #include_directories(SOEM)
    #target_link_libraries(your_target_name SOEM)
endif()

